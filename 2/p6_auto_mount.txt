문제 내용 :
HDD : 1GB(SCSI) 추가

partition size    mount point
100MB           : linux
200MB           : clang
200MB           : ms
300MB           : net
200MB           : anon

오토 마운트 해보기

문제 해결 :
버추얼 머신 또는 실제 물리적으로 1GB 이상의 용량을 확보합니다. 이번 실습에서는 기본적으로 버추얼 머신을 사용한다는것을 가정하고서 풀이를 진행합니다.

버추얼 머신 세팅에 들어가서
새로운 하드 디스크를 1GB 이상을 추가합니다.(1GB로 추가합니다.) 디스크 형식도 SCSI이므로 용량 설정 이후 그저 기본 설정으로 계속 만들어주시면 됩니다.

fdisk /def/sdb
를 통해 본격적으로 파티션을 만드는 과정으로 돌입합니다. 만약 이 명령어가 수행이 되지 않거나 이러한 파티션이 없다고 뜨는 경우에는 fdisk -l을통해 2048의 용량을 가진 디스크를 선택합니다.

우리는 지금 문제에서 5개의 파티션을 설정해줘야합니다. 하지만 프라이머리(primary)파티션은 하나의 디스크에 4개까지밖에 만들 수 없으니, 4개를 primary 파티션으로 설정하고, 나머지 하나의 영역을 extended의 영역으로 설정한 후 logical 파티션으로 설정할 예정입니다.


n을 입력합니다.
(*
Partition type:
    p   primary (0 primary, 0 extended, 4 free)
    e   extended
Select (default p) :
)
같은 구문이 나온는데, primary 뒤에 붙은 괄호는 현재 사용중인 파티션의 종류과 갯수를 나타냅니다.

이후 p를 입력합니다.
이 p를 입력함으로써 primary 파티션을 새로 추가합니다.
이후 
Using default response p 라는 구문과 함께
Partition number (1,3 default 1) :
이라는 구문이 나오는데, 딱히 순서나 이름을 신경쓰는 문제상황이 아니니 그저 엔터를 눌러 기본값으로 설정해줍니다.

First sector (2048-2097151, default 2048) :
이라고 나오는데... 뭔지 모르는 항목이니 그냥 기본값으로 입력하기 위해 엔터를 누릅니다.

Using default value 2048 이라는 문장이 나오며
Last sector, +sectors or +size{K,M,G} (2048-2097151, default 2097151):
이라는 구문이 나옵니다.
우리는 일단 100, 200, 200, 300, 200 MB가 필요하기 때문에 +100M 이라고 입력해줍니다.
이후
Partition 1 of type Linux and of size 100 MiB is set
이라는 구문이 나오며 정상적으로 파티션 생성이 완료되었음을 알립니다.

앞으로 총 4개의 파티션을 더 설정해야합니다.

이번에도 새로운 파티션을 생성해야 하니
Partition type:
    p   primary (0 primary, 0 extended, 4 free)
    e   extended
Select (default p) :
이라는 구문에서 다시 p를 입력하거나 아무것도 입력하지 않은 상태로 엔터를 누릅니다.
파티션 넘버와 First sector는 건드리지 않을거고,

Last sector, +sectors or +size{K,M,G} (2048-2097151, default 2097151):
다시 이러한 구문이 나옵니다.
이번에는 200MB 용량의 파티션이 필요하니, +200M 을 입력하고 엔터를 칩니다.

다시 n 을 눌러 새로운 파티션을 만듭니다.
primary로 생성하고, 숫자 건드리지 않고 First sector 또한 건드리지 않습니다.
다시 용량을 설정해줘야하는데, 이번에도 200MB의 용량이 필요하니 +200MB를 입력해줍니다.

다시 n 을 눌러 새로운 파티션을 만듭니다.
primary로 생성하고, 숫자 건드리지 않고 First sector 또한 건드리지 않습니다.
다시 용량을 설정해줘야하는데, 이번에는 300MB 용량이 필요하니 +300MB를 입력해줍니다.

다시 n을 눌러 새로운 파티션을 생성합니다.
하지만 이제 primary 파티션을 전부 차지했으니 자동적으로 extended로 넘어가며 logical 파티션이 생성됩니다.
이번에도 First sector 건드리지 않을거고, Last sector, +sectors or +size{K,M,G} (1644544-2097151, default 2097151) :
이라는 구문이 나오는데, 이번에는 1000 - 100 - 200- 200 - 300 을 하여 자동적으로 200MB 만 남게 되니 어짜피 설정 해주든 말들 상관 없이 200MB를 가져가게 될겁니다. 따라서 +200MB를 입력해줘도 괜찮지만, 이번 실습에서는 그냥 엔터를 쳐서 기본값인 최대치로써 200MB를 설정해줍니다.

이제 파티션의 크기 설정과 생성에 관한 과정은 모두 끝났습니다. 마지막으로
Command (m for help) :
라는 구문 뒤에 p 를 입력하여
여태까지 만든 파티션들이 정상적으로 만들어졌는지에 대해서 확인을 해줍니다.

저장하고 나온다는 의미의 w를 입력하여 fdisk 명령어를 끝냅니다.



이제 각 마운트 포인트를 설정하여 지금까지 만든 파티션들을 모두 마운트해줄겁니다.

mkfs.xfs /dev/sdb1
을 입력하여 /def/sdb1 파티션을 xfs 라는 파일 시스템 형식으로 포맷하고 새로 설정합니다.

mkfs.xfs /dev/sdb2
mkfs.xfs /dev/sdb3
mkfs.xfs /dev/sdb4
mkfs.xfs /dev/sdb5
mkfs.xfs /dev/sdb6
똑같은 의미로서 이 명령어들까지 전부 입력해줍니다.

아무곳에서나 상관 없으니(그래도 최상위 디렉토리가 아닌 유저의 홈 디렉토리가 적당합니다.) 아무 디렉토리나 이동하여 
mkdir linux clang ms net anon 
을 입력하여 마운트를 실행할 각 폴더들을 생성합니다.

일단 마운트를 오토 마운트로 돌려서 사용하기 전에 마운트를 한번 해줍니다.

mount /dev/sdb2 /home/itbank/linux
(
mount /dev/sdb3 /home/itbank/clang
mount /dev/sdb4 /home/itbank/mx
mount /dev/sdb5 /home/itbank/net
mount /dev/sdb6 /home/itbank/anon
)

입력 이후 정상적으로 마운트가 이행되는지 확인하기 위해
df -h
를 입력합니다.
/dev/sdb1   97M     5.3M    9.3M    6%  /test/linux
같은 구문이 있으면 잘 된것이니 이제 마운트를 해제해줍니다.
umount /dev/sdb2
(
umount /dev/sdb3
umount /dev/sdb4
umount /dev/sdb5
umount /dev/sdb6
)

이 일련의 과정의 핵심인 파일설정을 할겁니다 .

vi /etc/fstab
을 입력해서 오토마운트에 관한 파일인 fstab 을 엽니다.
이 안에
/dev/sdb2   /home/itbank/linux  xfs     defaults    0 0
/dev/sdb3   /home/itbank/clang  xfs     defaults    0 0
/dev/sdb4   /home/itbank/ms     xfs     defaults    0 0
/dev/sdb5   /home/itbank/net    xfs     defaults    0 0
/dev/sdb6   /home/itbank/anon   xfs     defaults    0 0
이러한 구문을 남김으로써
다음에 재부팅 할때도 자동으로 마운트가 되게 합니다.





