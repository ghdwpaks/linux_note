문제 내용:
서울지사에서 서버관리자로 일하고 있는 도중 본사에서 급한 연락을 받았다
본사 서버에서 용량이 부족한데 본사 서버관리자가 휴가 및 외근으로 인해 작업을 할 수 있는 사람이 없다고 할때
서울지사에서 본사에 5G 용량을 확보해주기
(단, 지사 머신에 HDD 추가 후 진행)

*용량 제공은 재부팅 후에도 자동으로 동작되도록 설정
*스냡샷 되돌린 후에는 putty를하나만 켜고 한다
(putty를 nfs server에 연결, nfs client는 nfs server에서 원격 제어)


문제 해결 :

아무리 마운트라고 해도 이러한 마운트포인트 또는 파티션이 존재해야합니다. 5GB 용량의 마운트 돼지 않은 파티션이 존재해야하지만, 그렇지 않은 경우는 아래의 파티션을 만드는 과정을 거쳐야합니다.

fdisk /dev/sdb 
을 눌러 하드디스크 또는 드라이브에 접근합니다.

n
을 입력해서 새 파티션을 만듧니다.

p
primary 파티션을 생성합니다. 이미 primary파티션의 한도가 가득 차서 더이상 생성할 수 없을 상황이라면 e를 눌러서 extended 구역을 만든 다음 logical 파티션을 생성합니다.

Partition number (1-4, default 1):
이라고 나오면
엔터
를 입력합니다. 이런 상황에서는 딱히 파티션의 숫자를 기록하지 않을 예정이니 엔터를 눌러 기본값으로 만듧니다.

First sector (2048-10485759, default 2048) :
이라고 나오면
엔터
를 누릅니다. 따로 설정해줄 값이 없습니다.

Last sector, +sector or +size{K,M,G} (2048-10485759, default 10485759) :
이때 
+5G
를 입력해도 괜찮지만, 이번 경우에는 엔터를 누르겠습니다.

이렇게 파티션을 만들었으니
w
를 눌러 파티션을 만드는 과정을 끝냅니다.


mkfs.xfs /dev/sdb1
을 입력하여 파티션의 파일 시스템 형식을 정해줍니다.
이러한 경우 /dev/파티션_이름 이라는 규칙을 어기지만 않으면 됩니다.

vi /etc/fstab
을 입력하여 auto_mount 를 하는데에 관여하는 시스템 파일인 /etc/fstab 파일을 vi 에디터로 열어 auto_mount 를 설정해줄겁니다.

/dev/sdb1   /nfs        xfs     default     0 0
을 입력합니다. 해석은 아래와 같습니다.
장치명          : /dev/sdb1
마운트 포인트   : /nfs
장치의 fs type      : xfs
마운트 옵션     : default
dump 운용       : 0
부팅시 fsck 동작: 0


만약 /nfs 라는 디렉토리가 없다며 
mkdir /nfs
라는 명령어를 입력해서 디렉터리를 만들어줍니다.

systemctl restart nfs
nfs의 서비스를 재시작(또는 시작)시켜서 지금까지 한 설정들을 적용시켜줍니다.

systemctl status
를 입력하여 해당 데몬(서비스)의 상태가 어떤지 살펴야합니다.
중간에 active 라는 초록(색이 아니여도) 글자가 있으면 됩니다.

firewall-cmd --permanent --add-service=nfs
를 입력하여 nfs 서비스에 대한 방화벽을 열어주고

firewall-cmd --reload
를 입력하여 방화벽 시스템을 다시 시작해야합니다.


ssh 192.168.127.129
를 입력하여 ssh 서비스를 시작합니다.
현재 상황으로써는 본사에 아무도 없기 때문에 telnet 서비스나 ftp 서비스를 설정해준 직원 자체가 없으니 ssh 로 연결을 해야합니다.
중간에

Are you sure you want to continue connecting (yes/no)?
라는 질문이 들어오면

yes
라고 입력하면 됩니다.

그다음에 지금 접속해있는 계정을 따라 계정에 연결하게 됩니다.
지금 접속해있는 계정이 root 계정이라고 한다면 ssh 통신에서의 서버인 192.168.127.128에서도 root 계정으로 접속하게 됩니다.
앞에서의 과정을 일반 사용자(ex : itbank , ghdwpaks)로써 실행하기 힘들것이라고 예상하지만, 만일 일반 사용자로 접속하게 되더라도 상관 없습니다.

root@192.168.127.128's password:
라고 나오면 해당 비밀번호를 입력하고 접속을 하게 됩니다.
root 가 아니여도, root가 일반사용자인 경우에는 접속을 완료한 후에

su root
를 입력하여 관리자 계정으로 전환합니다.

yum -y install autofs-*
라고 입력합니다. 이미 192.168.127.128 서버에 auto_mount 관련 패키지가 이미 다운되어 있으면 입력하지 않아도 괜찬습니다.

vi /etc/autofs.conf
를 입력해서 autofs.conf 문서에 접속해서 

browse_mode = no
라는 문장을 찾습니다. yes 라고 되어있으면 딱히 건드릴 필요 없습니다. 다만 #으로 주석처리 되어있거나 no 로 되어있으면
yes
를 입력하고, (주석이 있다면)제거해줘야합니다.

vi /etc/autofs.misc
auto_mount의 마운트 포인트들과 파티션을 다루는 파일에 vi 에디터로 접근합니다.

파일에 들어온 다음, 맨 마지막 줄을 하나 추가하고서
nfs_auto        -rw,hard,intr       192.168.127.128:/nfs
라고 입력합니다.
해석은 다음과 같습니다.

nfs_auto    : 마운트 포인트 실질적인 경로는 /misc/nfs_auto 로 됩니다.(디렉토리입니다.)
-rw         : read , write 를 하겠다는 의미입니다.
,           : 구분자
hard        : 연결이 끊긴다면 연결 시도를 더 하지 않고 그저 끊어버립니다.
,           : 구분자
intr        : 비정상 종료가 발생했을 경우, 연결을 유지한다는 내용입니다.
192.168.127.128:/nfs : 장치명입니다. 서버가 공유해주는 디렉토리가 192.168.127.128:/nfs 를 사용하겠다는것입니다.

vi /etc/exports
로 nfs 서비스로 파일을 열어서 공유하려는 디렉토리를 설정해줍니다.
(* 'https://m.blog.naver.com/PostView.naver?isHttpsRedirect=true&blogId=hanajava&logNo=220422771247' 발췌)


/nfs    192.168.127.129(rw,no_root_squash,sync)
이런 구문을 입력합니다. 해석은 이 아래와 같습니다.
/nfs    :192.168.127.129에서 공유해주는 디렉토리의 경로입니다.
192.168.127.129 : 공유해주는 서버의 주소입니다.
(       :구분자
rw      :읽고 , 쓰겠다는 의미입니다.
no_root_squash : root squash 를 사용하지 않음(* 'https://minimonk.net/1334')
sync    : 파일의 내용이나 공유 디렉터리의 파일이 변경이 되면 즉시 변경된 내용을 동기화한다.(* 'https://m.blog.naver.com/PostView.naver?isHttpsRedirect=true&blogId=jypit&logNo=221127580110')
)       :구분자

systemctl restart 
nfs 데몬 서비스를 다시 시작하고

systemctl status nfs
nfs 데몬의 서비스의 상태를 살펴봅니다. 중간에 active 이라고 나타나면 정상작동하는것입니다.



