Authority and ownership
권한
    -파일/디렉토리를 사용할 수 있는지 여부를 정하는 개념
    -허가권과 소유권으로 구분
        > 허가권 + 소유권 = 권한

허가권
    - ls -l 명령을 입력했을 때 나오는 내용 중 개체 형식을 나타내는 첫 글자 뒤에 오는 9개의 글자가 허가권이다.
    (예시 :
        [root@localhost home]# ls -l
        합계 0
        drwx------. 7 itbank itbank 191  9월 26 23:31 itbank
        drwxr-xr-x. 3 root   root    67  9월 26 23:02 test
        drwx------. 3 user1  user1   78  9월 29 19:38 user1
        drwx------. 3 user2  user2   78  9월 29 19:38 user2

        여기서
        drwx------.
        drwxr-xr-x.
        drwx------.
        drwx------.
        이 부분들이 권한을 나타내는 부분이다.
    )

    -8가지 문자로 권한을 표현 : r, w, x, -, s, S, t, T
    
        r : 일기 권한 (*디렉토리일 경우 - 디렉토리 내부 목록 확인 가능)
        w : 쓰기 권한 (*디렉토리일 경우 - 디렉토리 내부 목록 수정 가능)
        x : 실행 권한 (*디렉토리일 경우 - 디렉토리에 x가 없으면 디렉토리 자체 및 내부의 항목들을 사용할 수 없다.)
        - : 권한 없음

    -9자리의 권한 문자를 3개씩 끊어서 Owner, Group, Other 영역으로 구분
        Owner : 소유자를 위한 권한(소유자 : 파일/디렉터리를 소유 중인 사용자)
        Group : 그룹 사용자를 위한 권한(그룹 사용자 : 파일/디렉토리를 소유 중인 그룹에 소속된 사용자)
        Other : 그 외 사용자를 위한 권한(그 외 사용자 : Owner, Group 둘 다 해당되지 않는 사용자)

        * 3개의 영역 중 어느 영역의 권한을 적용 받는지에 대한 내용은 소유권에서 결정    

        예시 :
            
            Owner   |   Group   |   Other
            r  w  x  r   -    x   r   -   x


            drwxr-xr-x.
            d : 디렉터리
            r : 생성자(주인) 읽기 가능
            w : 생성자(주인) 수정 가능
            x : 생성자(주인) 사용 가능
            r : 같은 그룹 인원 읽기 가능
            - : 같은 그룹 인원 수정 불가
            x : 같은 그룹 인원 사용 가능
            r : 외부인(제3자) 일기 가능
            - : 외부인(제3자) 수정 불가
            x : 외부인(제3자) 사용 가능
    

            drwx------.
            d : 디렉터리
            r : 생성자(주인) 읽기 가능
            w : 생성자(주인) 수정 가능
            x : 생성자(주인) 사용 가능
            - : 같은 그룹 인원 읽기 불가
            - : 같은 그룹 인원 수정 불가
            - : 같은 그룹 인원 사용 불가
            - : 외부인(제3자) 일기 불가
            - : 외부인(제3자) 수정 불가
            - : 외부인(제3자) 사용 불가

    
    -권한 표현 방법
        1. 문자를 이용한 방법 : r, w, x, -  문자(= 권한 문자)를 차례대로 읽어주는 방법

        2. 숫자를 이용한 방법 : 문자를 바탕으로 숫자 값을 계산
            * 계산 방법
                1) 영역 분리
                2) r = 4, w = 2, x = 1, - = 0 을 각 영역의 문자에 대입 후 영역별로 합 계산
                3) 각 영역에서 구한 합에 Owner는 100, Group은 10, Other는 1을 곱해서 전체 합을 계산
                
                예시:
                    1. rwx-xr-X     >> 755

                        Owner   |   Group   |   Other
                      r   w   x    r  -  x     r  -  x
                      4   2   1    4  0  1     4  0  1
                          7           5           5
                        x100        x10          x1
                        700     +   50      +     5

                    2. rw-r--r--
                        
                        Owner   |   Group   |   Other
                      r   w   0    r  -  -     r  -  -
                      4   2   0    4  0  0     4  0  0
                          7           4           4
                        x100        x10          x1
                        700     +   40      +     4

                    
                    3. -wxrwxr-x
                        
                        Owner   |   Group   |   Other
                      -   w   x    r  w  x     r  -  x
                      0   2   1    4  2  1     4  0  1
                          3           4           4
                        x100        x10          x1
                        700     +   40      +     4

    -허가권 변경
        chmod [옵션] 권한값 대상 [대상] ... [대상]
        
        *권한값을 숫자/문자로 입력
            숫자로 입력하면 numeric method
            문자로 입력하면 symbolic method
                > symbolic method에서 사용하는 영역 문자
                    u : owner
                    g : group
                    o : other
            
        예시 :
        chomd o+wx hello.txt
        (*hello.txt 파일의 o(other)권한의 w 와 x 추가)

        chmod o-r hello.txt
        (*hello.txt 파일의 o(other)권한의 r 제거)

        chmod o+wx , o-r hello.txt
        (*hello.txt 파일의 o(other)권한의 w 와 x 추가를 하고 r권한을 제거한다.)

        chmod 623 hello.txt
        (*hello.txt 파일의 권한을 u = rw- , g = -w- , o = -wx 으로 설정한다.)

소유권
    - 파일/디렉토리를 어느 사용자와 그룹이 소유하고 있는지 나타내는 권한
        > ls -l 명령으로 출력되는 정보 중 링크 개수 뒤에 나오는 사용자명과 그룹명이 소유권
        (*
        -rw-r--r-- 1 itbank itbank  6205496 10월  6 20:03 vim-common-7.4.629-7.el7.x86_64.rpm
        -rw-r--r-- 1 itbank itbank  1105904 10월  6 20:03 vim-enhanced-7.4.629-7.el7.x86_64.rpm
        -rw-r--r-- 1 itbank itbank    11144 10월  6 20:03 vim-filesystem-7.4.629-7.el7.x86_64.rpm
        -rw-r--r-- 1 itbank itbank   453600 10월  6 19:18 vim-minimal-7.4.629-7.el7.x86_64.rpm

        이러한 경우에는 사용자명과 그룹명이 itbank(사용자명)와 itbank(그룹명)으로 동일하다
        )

    - 소유권을 두 개의 영역으로 구분
        > 앞에 나오는 정보가 계정명(UID), 파일/디렉토리를 소유하고 있는 사용자 뒤에 나오는 정보가 그룹명(GID), 파일/디렉토리를 소유하고 있는 그룹
        (*
        -rw-r--r-- 1 itbank itbank  6205496 10월  6 20:03 vim-common-7.4.629-7.el7.x86_64.rpm
        itbank      itbank
        (사용자명)  (그룹명)    )


    - 소유권 변경
        chown [옵션] 권한값 대상 [대상] ... [대상]

        *권한값 작성 방식( : 기호 대신에 . 기호 사용 가능)
        UID	> 소유권의 UID 지정
        UID:GID	> 소유권의 UID, GID 지정
        UID:	> 소유권의 UID, GID를 특정 사용자의 UID, GID로 변경
        :GID	> 소유권의 GID 영역 변경

        (*
        chown itbank:itbank hello.txt
        소유권의 UID와 GID를 itbank와 itbank로 지정한다.
        -rw-r--r-- 1 itbank itbank       12 10월  7 03:02 hello.txt

        chown root hello.txt
        소유권의 UID와 root로 지정한다.
        -rw-r--r-- 1 root itbank       12 10월  7 03:02 hello.txt
        
        
        chown :root hello.txt
        소유권의 GID와 itbank로 지정한다.
        -rw-r--r-- 1 root root       12 10월  7 03:02 hello.txt


        (*
        실행전
        drwxr-xr-x 2 root   root         52 10월  7 03:36 test
        -rw-r--r--  1 root   root     33 10월  7 03:35 hello_test1.txt
        -rw-r--r--  1 root   root     12 10월  7 03:36 hello_test2.txt
        )
        
        chown -R itbank:itbank ./test
        test디렉토리의 안에 들어있는 내용물과 그 하위 디렉토리 전부 소유권을 변경한다.  

        (*
        실행후
        drwxr-xr-x 2 itbank itbank       52 10월  7 03:36 test
        -rw-r--r--  1 root   root     33 10월  7 03:35 hello_test1.txt
        -rw-r--r--  1 root   root     12 10월  7 03:36 hello_test2.txt
        )

        )

    허가권과 소유권이 적용되는 방식(중요!!!)
    1. 작업 주체와 작업 대상의 UID, GID 확인
        > 작업 주체 : 작업을 수행하는(= 명령을 입력하는) 사용자	>> 사용자 정보 중 UID, GID(/etc/passwd 파일, id 명령)
        작업 대상 : 작업(= 명령)의 대상이 되는 파일/디렉토리	>> 소유권 UID, GID(ls 명령어 -l 옵션이나 -n 옵션)

    2. 작업 주체와 작업 대상의 UID, GID 비교
        1) UID 비교 >> UID가 일치하면 owner 영역 권한 적용, 일치하지 않으면 GID 비교
        2) GID 비교 >> GID가 일치하면 group 영역 권한 적용, 일치하지 않으면 other 영역 권한 적용



