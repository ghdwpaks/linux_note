user&group
사용자&그룹
    -사용자 계정이란?
    >사람이 장치를 사용하기 위해 로그인하는 계정
    누가 어떤 작업을 했는지 멱확하게 알기 위해서 개개인에게 생성해주는 계정
    사용자 계정을 이용하여 파일/디렉토리 권한 설정이 가능하다
    (같은 파일을 누구는 보고 누구는 못보는 등의 작업 범위 지정이 가능)

    -그룹이란?
    >사용자 계정을 묶어서 관리하기 위해 사용하는 계정
    관리자가 주로 제어하며(그룹 생성/수정/삭제, 그룹에 사용자 계정을 소속시키는 등)
    그룹에 권한을 부여하여 그룹에 소속된 사용자들이 동일한 권한을 적용받도록 할 수 있다.

사용자 계정
    -사용자 계정에 관련된 파일
        /etc/passwd     :사용자의 일반 정보가 들어있는 파일
            (*보는 방법 : itbank:x:1000:1000:dust:/home/itbank:/bin/bash)
            itbank      :사용명, 뒤의 정보들이 어느 사용자의 정보인지 표시함
            x           :암호이지만, 보안상의 이유로 passwd파일에는 암호를 표시하지 않는다.
            1000(왼쪽)  : UID, 이 사용자의 고유 번호
            1000(오른쪽): GID, 이 사용자가 소속된 주요 그룹의 고유 번호
            dust        :사용자 별칭(계정명 or ID로 사용 X, 표시되는 이름)

            (*여기서 말하는 UID, GID는
                UID :  User ID, 사용자에게 부여되는 고유 번호 
                GID :  Group ID, 그룹에게 부여되는 고유 번호 )
            (*   이란, 사용자가 입력한 명령어를 해독하는 해독기이며 운영체제(커널)에 명령을 전달해주는 역할을 한다. 현재 linux시스템에 설치된 shell은 /etc/shells 파일에서 확인이 가능하다.
            passwd 파일에 저장된 정보 중 shell 위치에 /sbin/nologin이 들어간 경우 해당 계정은 system or service 계정이다.(/sbin/nologin은 명령어 사용 shell 이다, 로그인을 하지 못하게 만드는 shell))
    
        /etc/shadow     :사용자의 고급 정보가 들어잇는 파일
            (*보는 방법 : itbank:$6$~~$~~~:18894:0:99999:7:::
            itbank      : 사용자명, 뒤의 정보들이 어느 사용자의 정보인지 표시한다.
            $6$~~$~~~   : 암호이다. 사용자가 로그인 할 경우 사용하는 비밀번호를 암호화하여 저장한다.
            18894       : 암호 생성 일자(1970년 1월 1일을 기준으로 몇일째에 생성된 암호인지 표시한다. 운영체제 설치 시 저장된 암호는 생성 일자가 표시되지 않는다.)
            0           : 암호 최소 사용 일자(변경불가기간)
            99999       : 암호 최대 사용 일자(만료 일자)
            7           : 암호 만료 전 경고 일자
            )

        /etc/login.defs : 사용자와 그룹 계정 및 삭제와 관련된 몇몇 정보들이 들어있는 파일


        
    -사용자 암호 변경
        passwd          : 명령어를 입력한 사용자 자신의 암호 변경(모든 사용자가 사용 가능)
        passwd 계정명   : '계정명' 사용자의 암호 변경(관리자만 사용 가능)
        passwd itbank   : itbank 사용자의 암호 변경(관리자만 사용 가능)
    
    -사용자 계정 생성
        useradd [옵션] [값] ... [옵션] [값] 사용자명

            옵션들 :
            c : 별칭 지정
            useradd -c testuser user2 (*user2를 추가하면서 testuser이라는 별명도 같이 넣는다.)

            s : shell 지정(system에 설치된 shell 지정 -> /etc/shells 파일에서 확인 가능)
            useradd -c testuser -s /bin/sh user2 (*user2를 추가하면서 testuser이라는 별명을 같이 넣고서 shell은 /bin/sh 라는 shell로 지정한다.)

            d : 홈 디렉토리의 경로와 이름 지정(반드시 경로와 이름 전부 절대경로로 작성)
            useradd -d /jong/ro user3 (*user3를 추가하면서 /jong/ro 디렉토리를 홈 디렉토리로 지정함. /etc/login.defs 파일 CREATE_HOME 설정이 없거나 no로 되어있으면 -m 옵션과 함께 사용)

            m : make directory

            k : 기본값 /etc/skel이 아닌 다른 디렉토리를 skel로 지정, 반드시 m 옵션과 함께 사용함.

            D : 사용자 생성 시 적용되는 기본 정보 확인한다. 그저 확인하는것만이 가능하니 사용자 계정을 생성할 수는 없다. 추가 옵션을 함께 사용하여 기본 정보 변경 할 수 있다.(예시 : d 옵션을 함게 사용하면 홈 디렉토리 생성 위치 변경이 가능하다.)
            



            /etc/skel   : 사용자 홈 디렉토리의 뼈대가 되는 디렉토리
                         사용자 생성 시 홈 디렉토리 내부에 복사할 파일/디렉토리들을 넣어놓는다
                         > 사용자 생성 시 홈 디렉토리 내부에 특정 파일/디렉토리 자동으로 생성 가능

            /etc/default/useradd     : 사용자 생성 시 적용되는 기본 정보가 저장된 파일이며 이 파일의 내용을 변경하면 useradd의 옵션을 사용하지 않아도 같은 효과를 볼 수 있다.


        문제 예시 :
        사용자 user7을 생성한다. (단 옵션을 사용하지 않고 아래의 정보가 적용되도록 설정 후 생성한다.)
        shell 의 이름 : tcsh
        홈 디렉토리 생성 위치 : /test
        skel 로 사용할 디렉토리 : /skelkg

        풀이 :

        mkdir /test (*홈 디렉토리 설정을 위한 /test 생성)

        cp -r /etc/skel /skelkg (*skel로 사용할 디렉토리 생성)

        vi /etc/default/useradd
        (*useradd 명령어의 기본정보가 담긴 파일로 vi 진입)

        (*
        #useradd default file
        GROUP=100
        HOME=/jong
        INACTIVE=-1
        EXPIRE=
        SHELL=/bin/bash
        SKEL=/etc/skel
        CREATE_MAIL_SPOOL=yes
        )
        HOME=/jong 을 HOME=/test 로 변경 
        SHELL=/bin/bash 를 SHELL=/bin/tcsh
        SKEL=/etc/skel 을 SKEL=/skelkg

        touch /skelkg/test7
        (*test7용 skel파일 제작)

        useradd user7
        (*user7 유저 추가)

        tail -1 /etc/passwd
        (*필수 아님. 잘 추가됐는지 확인)
    
    -사용자 계정 정보 수정
        usermod 옵션 값 [옵션] [값] ... [옵션] [값] 사용자명

        (*옵션은 useradd 의 옵션을 대다수 사용할 수 있다.)

        문제 예시 :
        모든 사용자의 홈 디렉토리를 /export/home/<username> 으로 변경
        (*잘못 만들어서 홈 디렉토리가 없는 경우에는 사용자 정보만 수정)

        사용자의 shell은 bash shell, 별칭은 전부 없도록 정보 수정
        (별칭 제거 시 '' 사용)

        풀이 :
        
            mkdir -p /exprot/home
            
            tail -8 /etc/passwd
            (*해당 운영체제에 관련된 (관리자를 제외한) 유저들에 대한 정보를 출력하는 명령어.
            이 명령어와 출력문을 통해서 해당 유저가 별칭을 갖고있는지, 홈 디렉토리은 어디인지, 쉘은 뭘 쓰는지 등등의 정보를 확인한다.)

            usermod -c '' -d /export/home/itbank itbank
            (* -c '' 는 itbank itbank의 별명을 없애는 역할을 한다.
               -d /export/home/itbank 는 itbank
                itbank 는 앞서 입력했던 옵션들과 값들의 목표가 되는 유저를 뜻한다.
            )

            mv /home/itbank /export/home
            (* /home/itbank 는 해당 명령 이행 이전에 쓰이던 itbank 유저의 홈 디렉토리를
            /export/home 으로 옮기기 위함이다.
            )

            usermod -d /export/home/user1 user1
            (*user1의 홈 디렉토리를 /export/home/user으로 변경.)
            usermod -d /export/home/user4 user4
            (*user4의 홈 디렉토리를 /export/home/user4으로 변경.)
            usermod -d /export/home/user5 user5
            (*user5의 홈 디렉토리를 /export/home/user5으로 변경.)
            usermod -d /export/home/user7 user7
            (*user7의 홈 디렉토리를 /export/home/user7으로 변경.)
            usermod -d /export/home/user2  -c '' -s /bin/bash
            (*user2의 홈 디렉토리를 /export/home/user으로 변경하고 별칭을 제거하며 사용자에 배정된 shell을 /bin/bash 로 바꾼다.)
        
            mv /home/user* /export/home/
            (* /home/디렉토리 안에 user가 디렉토리 앞에 포함된 경우에 예외없이 /export/home/으로 옮긴다.)

            usermod -d /export/home/user3 user3
            (*user3의 홈 디렉토리를 /export/home/user3으로 변경.)

            mv /jong/ro /exprot/home/user3
            (*원래 user3의 홈 디렉토리였던 /jong/ro 디렉토리를 /export/home/user3로 옮긴다.)


            usermod -d /export/home/user6 user6
            (*user6의 홈 디렉토리를 /export/home/user6으로 변경.)
            mv /jong/user6 /export/home
            (*원래 user6의 홈 디렉토리였던 /jong/user6 디렉토리를 /export/home으로 옮긴다.)

        
    -사용자 계정 삭제
            userdel [옵션] 사용자명

            옵션 :
            r : 사용자의 홈 디렉토리나 메일함 등 사용자 소유의 개체들을 함께 삭제

    -그룹
        -사용자 계정을 그룹에 소속시켜서 사용함(= 사용자 계정들을 하나의 그룹으로 묶어준다.)
            > 그룹을 대상으로 권한을 부혀아여 그룹에 소속된 모든 사용자가 동일한 권한을 적용 받음

        - 사용자가 그룹에 소속되는 방법을 두가지로 분류
        1. 사용자가 그룹을 자신의 주요 그룹으로 사용(=gid로 사용)
        2. 사용자가 그룹에 일반 소속되어 사용함.            
        
        -그룹에 관련된 파일 
            /etc/group      :그룹의 일반 정보가 들어있는 파일 
            *파일 내용 보는 방법
            itbank:x:1000:

            itbank  : 그룹 이름, 뒤의 정보가 어느 그룹의 정보인지 알려준다.
            x       : 암호, 그룹에는 별도의 암호를 지정하지 않는다.
            1000    : gid, 해당 그룹의 고유 번호
            <마지막 필드(*현재 예시에는 공백 상태)>
                    : 그 그룹에 일반 소속된 사용자들의 목록 출력

        -그룹 생성
            groupadd [옵션] [값] ... [옵션] [값] 그룹명

            

            옵션 :
            g : 생성되는 그룹의 GID 지정

            예시 :
            groupadd test_group (*test_group이라는 이름의 그룹을 생성함)
            groupadd -g 1234 test_group (*test_group이라는 이름의 그룹을 GID가 1234인 상태로 생성함.)

        -그룹 정보 수정
            groupmod 옵션 값 [옵션] [값]  ... [옵션] [값] 그룹명

            옵션 : 
            g : 그룹의 gid 지정
            n : 그룹의 이름 지정 

            예시 :
            groupmod -g 4321 test_group (*test_group의 GID를 4321로 변경함)
            groupmod -n ghdwpaks test_group (*test_group라는 이름의 그룹을 ghdwpaks 이라는 이름의 그룹으로 이름변경을 함)
            groupmod -g 7904 -n ghdghdwpaks ghdwpaks(*ghdwpaks이라는 이름의 그룹의 GID를 7904로 바꾸고 이름도 ghdghdwpaks으로 변경함)

        -그룹 삭제
            groupdel 그룹명
            (*사용자가 주요 그룹(gid)로 사용중인 그룹은 삭제하지 못한다.)

        - 사용자 + 그룹
        1. 사용자를 만들면 같은 이름의 그룹이 자동으로 생성된다 (*사용자는 함께 만들어진 그룹을 자신의 주요 그룹(GID)으로 사용한다)
        2. 사용자가 일반 소속된 그룹과 사용자의 주요 그룹은 언제든지 변경 가능하다.
            1)GID 변경  > 사용자 계정 정보를 수정(= usermod)
            2)일반 소속된 그룹 변경 > 사용자 계정 정보를 수정(= usermod)
                                    > gpasswd 명령어 사용
        
        -gpasswd
            -그룹에 소속된 일반 사용자 목록을 제어

            -사용 형식
                gpasswd 옵션 사용자명 그룹명

            -옵션들 :
                a : 그룹에 사용자를 일반 소속 
                d : 그룹의 일반 사용자 목록에서 특정 사용자 제거

            -예시 :
                gpasswd -a user12 test_group (*user12를 test_group에 소속시킴)
                gpasswd -d user12 test_group (*user12를 test_group에 소속제외시킴)

        
        -id
            -사용자의 UID와 GID, 소속된 그룹의 목록 확인
            - 사용 형식
                id <사용자명>

        문제 예시 :
            아래 조건에 맞는 사용자 생성해보기
            user    : testuser
            UID     : 1200
            GID     : tg
            shell   : csh
            home directory 생성 위치    : /hosting
            skel    : /kgskel
            자동생성 디렉토리           : public_html
            자동생성 파일               : .kg

            조건 1. 모든 작업은 기본정보(useradd -D, /etc/default/useradd)를 수정하지 않고 옵션만 사용
            조건 2. 사용자 생성 후 다른 명령어를 사용하여 정보 수정 X (usermod 등등)

            groupadd tg

            cp -r /etc/skel /kgskel

            touch /kgskel/.kg

            mkdir /kgskel/public_html /hosting

            useradd -u 1200 -g tg -s /bin/csh -d /hosting/testuser -mk /kgskel testuser

            tail -1 /etc/passwd

            id testuser

            
