ls
-대상
    생략    : 현재 위치한 디렉토리 내부의 목록을 확인
    파일    : 파일 자체에 정보를 확인
    디렉토리: 디렉토리 내부의 목록을 확인
-옵션
    l  :(L , 엘)자세한 정보 출력
    a  :숨겨진 항목들 출력
    d  :대상이 디렉터리(directory)인 경우에 대상 자체의 정보를 출력함(디렉터리가 아닌 대상으로는 적용되지 않는다.)
    * l(엘)옵션 정보 예시
    R  :(대문자)대상이 디렉터리(directory)인 경우에 하위 디렉토리가 있다면 하위 디렉토리의 내부까지 출력함

    drwx------.  3 itbank itbank  78  9월 16 23:20 itbank

    d           : 대상 객체의 형식(- : 일반 파일 , d : 디렉터리(directory), l : 바로가기(Symbolic link file ... ))
    rwx------.  : 허가권
    3           : 링크(link) 개수
    itbank itbank   : 소유권
    78              : 크기(byte 단위, 디렉토리(directory는 정확한 크기 X))
    9월 9 20:24     :마지막으로 수정된 날짜와 시간


--------


기본 디렉토리
-시스템이 설치 되었을 떄 기본적으로 생성되어 있는 디렉토리
    > 개수가 굉장히 많지만 / 디렉토리 아래에 있는 항목들만 확인
-   /디렉토리는 Linux 시스템의 최상위 디렉토리 Linux를 구성하는 모든 파일과 디렉토리는 전부 / 아래에 있다.(Tree 트리 구조로 되어 있다)
-   / 아래에 있는 기본ㄴ 디렉토리들은 시스템 구성에 있어서 중요한 역할을 하고있다. (->기호는 바로가기(symbolic link를 의미 , symbolic link는 윈도우의 바로가기와 비슷하다.))

bin     : 모든 사용자가 사용할 수 있는 공용 명령어들이 들어있는 디렉토리
boot    : 부팅에 필요한 각종 파일들이 모여있는 디렉토리
dev     : 장치 파일이 생성되는 디렉토리
etc     : 
home    : 일반 사용자들의 홈 디렉토리가 생성되는 디렉토리 (*여기서 말하는 홈 디렉토리는 사용자 개인의 디렉토리를 말한다.)
lib     : 라이브러리가 모여있는 디렉터리
lib64   : 64bit 전용의 라이브러리가 모여있는 디렉토리
media   : remote device를 인식했을 떄 연결해주는 디렉토리
opt
root    : 관리자(root)의 홈 디렉토리
sbin    : 관리자만 할 수 있는 명령어(시스템 제어 명령어)들이 들어있는 디렉토리


--------


cp
    - copy , 복사 + 붙혀넣기를 한번에 함
    - 기본적으로 파일만 복사가 가능
        > 디렉토리의 복사는 별도의 옵션이 필요함
    - 원본 파일과 같은 이름으로 or 원본 파일과 다른 이름으로 복사 가능
        > 이름을 바꿔서 복사할 때는 원본을 하나만 입력(1:1 복사만 가능)
    - 형식
        cp [옵션] 원본 [원본] ... [원본] 복사할위치[+이름]
        (*이름을 원본과 같게 입력하거나 생략하면 원본과 같은 이름으로 복사하며 , 원본과 다른 이름을 입력하면 해당 이름으로 변경되어서 복사함)
    -예시
        cp ./hello.txt ./itbank/
        cp ./hello.txt ./itbank/hello.txt
        cp ./*.txt ./itbank/
        cp ./hello.txt ./hello2.txt ./itbank/
        

--------


mv
    -move , 이동(잘라내기 + 붙혀넣기)
    -파일과 디렉토리 전부 이동 가능
    -원본 파일과 같은 이름으로 이동하거나 원본 파일과 다른 이름으로 이동하는게 가능하다. (다만, 이름을 바꿔서 이동할때는 원본을 하나만 입력할 수 있다.)
    -형식
    mv [옵션] 원본 [원본] ... [원본] 이동할위치[이름]
    -예시
    mv ./*.txt ./itbank/
    mv ./hello.txt ./itbank/hellooo123.txt
    


--------


mkdir
    - make directory 디렉토리 생성
    - 생성할 디렉토리 경로가 존재하지 않으면 생성이 불가능하다(다만 옵션을 사용하여 경로까지 함께 생성할 수 있다.)
    - 옵션
        -p : 생성할 디렉토리의 경로까지 함께 생성(상위 디렉토리까지 생성)
    - 예시
        mkdir itbank3
        mkdir -p ./itbank4/itbank5


--------


rmdir
    -remove directory 디렉토리 샂게
    -디렉토리 내부에 다른 파일 / 디렉토리가 있다면 삭제가 불가능하다
    -옵션
        -p : 디렉토리 삭제 후 상위 디렉토리가 비어 있는 경우 함께 삭제


--------


rm
    -remove 삭제
    -기본적으로 파일 삭제 가능(디렉토리를 삭제하고싶은 경우 옵션을 이용하여 삭제한다.)
    -옵션
        r : 디렉토리까지 삭제
        f : 확인과정을 생략하고 삭제
    -예시
    rm -rf ./itbank/*
    rm -rf ./*


--------

alias
    -임의의 키워드에 명령어[에 옵션까지] 등록함
    -해당 키워드로 등록된 명령을 대체해서 사용함
    
    -형식
        alias                           : 등록된 내용 확인
        alias 키워드='명령어 [옵션]'    : 키워드 등록

    -예시
        alias
        alias p="pwd"
        alias p='pwd'
        alias lll = "ls -alR"
        

--------


cat
    -사용 형식
        cat         : 입력한 내용을 출력(정규 표현식 or shell script 에서 많이 사용함.)
        cat 파일명  : 파일의 내용을 출력함.
        cat > 파일명: 입력한 파일명의 이름으로 파일을 생성하며, 생성함과 동시에 사용자를 간단하게 입력할 수 있게 해줌(vi에디터가 아님.) 다만 이미 파일명이 현재 디렉토리에 있을때는 덮어씌운다. 경고문은 뜨지 않는다.

    -예시
    cat
    cat hello.txt
    cat > hello.txt


--------

touch
    -빈 파일 생성. 디렉터리를 생성하지 않는다.(디렉터리 생성 명령어 : mkidr)
    -파일/디렉토리를 대상으로 하여 최종 수정된 날짜와 시간을 갱신한다.

    -예시
    touch hello.txt
    

--------


head
    -파일의 첫 줄부터 10줄 출력
    
    -옵션
        -숫자 : 숫자만큼의 줄 출력

    -예시
    head hello.txt
    head -20 hello.txt
    head -30 hello.txt
    

--------


tail
    -파일의 마지막 줄부터 10줄 출력
    -옵션
        -숫자 : 숫자만큼 줄 출력
    -예시
    tail hello.txt
    tail -30 hello.txt
    

--------

기호
.   :현재 디렉토리 (단, 파일/디렉토리 이름 앞에 붙어있으면 숨김 처리가 된다.)
cat ./hello.txt
cd ./test_dir



..  :상위 디렉토리
cd ../test_dir2
cd ../../
cat ../test1.txt



~   :사용자의 홈 디렉토리
cd ~



*   :모든 것(모든 종류와 길이의 문자를 표현할 수 있음.)
cp ./*.txt ../test_dir2
cp ./* ../


>   :기호 왼쪽 명령어가 동작하여 나오는 출력 내용을 기호 오른쪽에 저장함(> : 덮어쓰기, >> : 내용 추가)


|   :(파이프(pipe), shift + \)CLI, CUI의 단점인 '한 줄에 명령어 하나'를 보완하는 기오로써 하나의 대상에 여러 명령어를 적용시킬 수 있다.

ls -al /etc/ | more
more (ls -l /etc/)

위의 두 문장은 같은 뜻을 가진다.


--------


more
    -출력되는 내용이 너무 많을 때 화면 높이에 맞춰서 내용을 나누어 출력함

    -동작 후 추가 입력 키

    -지나간 내용을 다시 볼 수는 없다.

    -일반적으로는 다른 명령어와 (파이프 기호(|)를 통해)함께 사용하는게 보편적이다.

    enter       : 한 줄 넘어가기
    spacebar    : 한 화면 넘어가기
    q           : more 중간에 종료

    -예시 
    more hello.txt
    ls -al /etc/ | more
    

--------

nl
    -출력 내용에 줄 번호 붙여주는 명령어
    -일반적으로는 다른 명령어와 함께 사용한다.
    -예시:
    (*ls -l /etc/ , less , nl 총 3가지 명령어를 한 줄로 작성하여 /etc/ 내부 목록에 줄 번호 붙여서 less 적용시켜보기)
    ls -l /etc/ | nl | less


--------

wc
    -파일의 내용이 몇 줄, 몇 단어, 몇 글자인지 출력함
    -예시
        l : 몇 줄인지 출력(줄은 enter를 기준으로 구분)
        w : 몇 단어인지 출력(단어는 spacebar , enter를 기준으로 구분. enter또한 하나의 단어로써 취급한다.)
        c : 몇 글자인지 출력(공백문자=sapcebar, 개행문자=enter 각각 한 글자로 취급)


    
    
    예시:
    wc hello.txt

    출력 예시:
     34 99   511  hello.txt
     줄 단어 글자 검사한 파일

    
    
    
    추가예시 :
        wc -l hello.txt
        wc -w hello.txt
        wc -c hello.txt


--------    


cal
    -형식
    cal             :운영체제 설졍된 날짜와 시간을 기준으로 현재 월의 달력을 출력
    cal 숫자1       :숫자를 년도로 사용하여 해당 년도의 전체 달력을 출력
    cal 숫자1 숫자2 :숫자2를 년도로 숫자1을 월로 사용하여 해당 년월의 달력을 출력

    -입력예시
    cal
    cal 1
    cal 1 2