vi
    -Linux 에서 기본적으로 제공하는 문서 편집기(CLI,CUI 황경에서 사용함)
    -사용환경
        명령 모드 : 기본 사용 환경, 커서 이동, 복사/잘라내기/붙혀넣기, 삭제, 입력/실행 모드 전환
        입력 모드 : 문서의 내용을 변경하기 위한 환경, 내용 추가/수정/삭제, 명령 모드 전환 가능
        실행 모드 : 그 위 대부분의 기능들을 사용하기 위한 환경, 명령 모드 전환

        -입력 모드와 실행 코드 간의 전환은 불가능
    -vi 에디터 실행
        vi
        (*빈 파일 열기)
        vi 파일명
        (*파일 명 열기. 예시 : vi hello.txt)
    
    -명령 모드 사용 방법
        -입력 모드 전환
            i : 커서 왼쪽으로 내용 입력 
            I : 커서가 있는 줄 왼쪽으로 내용 입력

            a : 커서 오른쪽으로 내용 입력
            A : 커서가 있는 줄 오른쪽으로 내용 입력

            o : 커서 아래로 빈 줄 삽입 후 내용 입력
            O : 커서 위로 빈 줄 삽입 후 내용 입력

            s : 커서가 있던 글자를 지우고 내용 입력
            S : 커서가 있던 줄을 지우고 내용 입력
        
        -실행 취소(undo) , 다시 실행(redo)
            u        : 실행 취소(되돌리기)
            ctrl + r : 다시 실행

        -삭제
            x : 커서 오른쪽 글자 삭제(delete키와 같은 일을 하나, 커서 오른쪽에 지울 글자가 더 없다면 커서 왼쪽 글자 삭제(backspace 키와 동일))
            X : 커서 왼쪽 글자 삭제(backspace키와 같은 일을 하며, 지울 글자가 더 없다면 작동하지 않는다.)

        -복사 , 잘라내기 ,붙혀넣기
        yy : 커서가 있는 줄 복사
        숫자 + yy : 커서가 있는 줄 부터 숫자만큼의 줄 복사
        dd : 커서가 있는 줄 잘라내기
        숫자 + dd : 커서가 있는 줄 부터 숫자만큼 줄 잘라내기
        p(소문자) : 커서 아래로 붙혀넣기
        P(대문자) : 커서 위로 붙혀넣기

        -글자 단위 커서 이동
            k : 상
            j : 하
            h : 좌
            l : 우

        -단위 단위 커서 이동
            w : 다음 단어의 첫 글자로 이동
            b : 이전 단어의 첫 글자로 이동
            e : 다음 단어의 마지막 글자로 이동

        -줄 내부 커서 이동
            0 : 줄의 첫 글자로 이동
            $ : 줄의 마지막 글자로 이동

        -화면 내부 커서 이동
            H : 화면의 첫 줄로 이동
            M : 화면의 가운데 줄로 이동
            L : 화면의 마지막 줄로 이동

        -문서 내부 커서 이동
            gg : 문서의 첫 줄로 이동(= [[)
            G : 문서의 마지막 줄로 이동(= ]])
    -실행 모드 사용 방법
        -검색
            /Pattern : 위에서 아래로 Pattern 검색
            ?Pattern : 아래에서 위로 Pattern 검색
            (*
            /user : 위에서 아래로 user 이라는 단어 검색
            ?user : 아래에서 위로 user 이라는 단어 검색
            )
            

            n : 검색 방향으로 다음 찾기
            N : 검색 방향의 반대로 다음 찾기
            (Windows 의 메모장처럼 위에서 아래로, 아래에서 위로 검색이 다 끝난다면 끝내는게 아니라, chrome과 vs code의 F3 , ctrl + f 처럼 계속 누르다보면 문서의 끝으로 이동해서 다시 키워드를 검색해준다. 좀 더 편리한점은, Windows의 메모장처럼 '더이상 없다'라는 신호도 보내준다는거다.)

        -줄 번호 출력 / 숨기기
            :set nu    (*줄 번호 보이기)
            :set nonu  (*줄 번호 숨기기)
        
        -찾아서 바꾸기(치환)(*찾아서 바꾸게 된다면, 범위내에서 나오는 모든 것을 바꾼다.(한 줄에 여러개일경우 문제가 생길 수 있다.))
            
            :[범위]s/찾을내용/바꿀내용/[범위]

            [범위]의 종류
                생략    : 커서가 있는 줄에서 내용을 찾아서 변경함
                n       : n번째 줄에 있는 내용을 찾아서 변경함
                :3s/home/user       (*3번쨰 줄 home이 있다면 home을 지우고 user로 바꾸기)
                n1,n2   : n1번째 줄부터 n2번째 줄에 있는 내용을 찾아서 변경
                :3,17s/home/user    (*3번째 줄부터 17번째 줄까지 home이 있다면 home을 지우고 user로 바꾸기)
                %       : 문서 전체에 있는 내용을 찾아서 변경
                :%/home/user        (*문서 전체에 home이 있다면 home을 지우고 user로 바꿈)
                :5,%/home/user      (*5번째 줄부터 문서 끝까지 home이 있다면, home을 지우고 user로 바꿈)

            옵션의 종류
                g : 한 줄에 찾는 내용이 여러개 있는 경우에 전부 변경
            
        -현재 사용 중인 파일 확인
            :f  : 현재의 파일명과 커서 위치 확인
        
        -리눅스 명령어 임시 사용
            :! <명령어>     (*vi를 잠시 멈추고 Linux 명령어 동작)
            :! ll (*vi를 잠시 멈추고 ls -al동작)

        -문서에 내용 삽입 (*:r, :r! 는 ':'와 r 사이에 숫자를 넣어서 특정 줄 아래로 삽입이 가능하기도 하다.)

            :.! <명령어>    (*커서가 있는 줄 내용을 지우고 Linux 명령어 동작 결과를 삽입(*화면에 결과가 출력되는 명령어를 사용))
            :.! ll (*vi의 커서가 위치한 줄의 내용을 지우고 ls -al 동작함)

            :r! <명령어>    (*커서가 있는 아래쪽에 Linux 명령어 동작 결과를 삽입 (*화면에 결과가 출력되는 명령어를 사용))
            :r! ll (*vi의 커서가 위치한 줄의 내용을 남기고, 그 아랫줄에 ls -al 동작함)
            :3r! hello.txt   (*3번째 줄 내용을 지우고 hello.txt내용을 삽입함)

            :r <파일명>     (*커서 아래쪽에 파일의 내용을 삽입함)
            :r hello.txt    (*커서 아래쪽에 hello.txt내용을 삽입함.)
            :3r hello.txt   (*3번째 줄 아래에 hello.txt내용을 삽입함)
        
        -저장 , 종료, 불러오기
            :w                  (*저장)
            :w inittab.txt      (*inittab.txt로 저장)
            :q                  (*종료)
            :wq                 (*저장하고 종료)
            :wq inittab.txt     (*inittab.txt로 저장하고 종료)
            :e hello.txt      (*기존 문서를 종료하고 hello.txt파일 불러오기)
            :enew               (*기존 문서를 종료하고 새 파일 편집 시작)

        -화면 분할
            ctrl + w + n : vi 화면 분할
            ctrl + w + w : 분할 화면 간 커서 이동



